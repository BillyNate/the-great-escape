{
  "rules": {
    "users": {
      "$user_id": {
        ".read": true,
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": "$user_id === auth.uid"
      }
    },
    "games": {
      "$game_id": {
        ".read": true,
//        ".write": "auth !== null && ((!data.exists() && data.child('state').val() == 'assembling') || data.child('admin').val() === auth.uid)",
        ".write": "auth !== null && (data.child('admin').val() === auth.uid || !data.exists())",
        "items": {
          "$item_id": {
            "state": {
              ".write": true //Shouldn't this only be possible if user is member of game?
            },
            "location": {
              ".write": true //Shouldn't this only be possible if user is member of game?
            }
          }
        },
        "venues": {
          "$venue_id": {
            "state": {
              ".write": true //Shouldn't this only be possible if user is member of game?
            }
          }
        },
        "users": {
          "$user_id": {
            ".write": "auth !== null && (root.child('games').child($game_id).child('admin').val() == auth.uid || $user_id === auth.uid || !data.exists())"
          }
        },
        "shots": {
          "$shot_id": {
            ".write": "!data.exists()"
          }
        },
        "state": {
          ".write": "auth !== null && (root.child('games').child($game_id).child('admin').val() == auth.uid || (newData.val() == 'apprehended' || newData.val() == 'vanished'))"
        }
      }
    },
    "items": {
      ".read": true,
      ".write": false
    },
    "languages":{
      ".read": true,
      ".write": false
    },
    "venues": {
      ".read": true,
      ".write": false
    }
  }
}